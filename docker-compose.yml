version: "3.9"
name: spring-boot-loki
### SERVICES ###
services:
  springbootapp:
    container_name: springbootapp-1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "10100:8080"
    environment:
      - TZ
      - JSON_LOGS_ENABLED=true
      - JAVA_OPTS=-Dspring.profiles.active=docker
    depends_on:
      postgres:
        condition: service_healthy
  otel-collector:
    container_name: otel-collector-1
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-cont/otel-collector.yml
    volumes:
      - ./docker/otel-collector/otel-collector.yml:/etc/otelcol-cont/otel-collector.yml
    ports:
      #- "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
  postgres:
    container_name: postgres-1
    image: postgres:latest
    ports:
      - "10001:5432"
    volumes:
      - ./docker/postgres/init-ddl.sql:/docker-entrypoint-initdb.d/init-ddl.sql
      - postgres:/var/lib/postgresql/data
    environment:
      - TZ
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
  grafana:
    container_name: grafana-1
    image: grafana/grafana:latest
    links:
      - grafana-loki
      - grafana-promtail
      - prometheus
    ports:
      - "10000:3000"
    volumes:
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - TZ
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  grafana-loki:
    container_name: grafana-loki-1
    image: grafana/loki:latest
    ports:
      - "10003:3100"
    environment:
      - TZ
  grafana-tempo:
    container_name: grafana-tempo-1
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yaml:/etc/tempo.yaml
      - grafana-tempo:/tmp/tempo
    ports:
      #- "14268"  # jaeger ingest
      #- "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      #- "9411"   # zipkin
    environment:
      - TZ
  grafana-promtail:
    container_name: grafana-promtail-1
    image: grafana/promtail:latest
    volumes:
      - ./docker/promtail/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    environment:
      - TZ
  prometheus:
    container_name: prometheus-1
    image: prom/prometheus:latest
    ports:
      - "10002:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    environment:
      - TZ
### VOLUMES ###
volumes:
  prometheus:
  postgres:
  grafana-tempo:
